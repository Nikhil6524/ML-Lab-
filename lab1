import numpy as np
def vowelorcons(s):
    vowels=0
    consonents=0
    for i in s:
        if(i=='a' or i=='e' or i=='o' or i=='u' or i=='i'):
            vowels+=1
        else:
            consonents+=1
    return vowels,consonents
s=input("enter the string")
print(vowelorcons(s))
def matrixmult(mat1,mat2):
    dim1=np.shape(mat1)
    row1,column1=dim1
    dim2=np.shape(mat2)
    row2,column2=dim2
    if column1 != row2:
        raise TypeError("matrices cannot be multiplied")
    else:
        return np.dot(mat1,mat2)
mat1=[[10,11,12],[12,13,14],[15,16,17]]
mat2=[[1,2,3],[4,5,6],[7,8,9]]
print(matrixmult(mat1,mat2))
def commonelements(list1,list2):
    b=[]
    for (i,j) in zip(list1,list2):
        if(i==j):
            b.append(i)
    return b
list1=[1,2,3,4]
list2=[1,4,5,6]
print(commonelements(list1,list2))
def transpose(mat3, r, c):
    result = [[0 for _ in range(r)] for _ in range(c)] 
    for i in range(r):
        for j in range(c):
            result[j][i] = mat3[i][j]
    return result
mat3 = [[1, 2, 3], [4, 5, 6]]
rows, columns = np.shape(mat3)
print(transpose(mat3, rows, columns))
def euclidiandist(p1,p2):
    distance= np.sqrt(np.sum(np.square(p1-p2)))
    return distance
p1=np.array((1,2,3))
p2=np.array((4,5,6))
print(euclidiandist(p1,p2))
